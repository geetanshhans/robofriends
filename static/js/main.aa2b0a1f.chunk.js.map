{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","CardComponent","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","ErrorBoundary","props","state","hasError","error","info","this","setState","children","React","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"0OAceA,EAZD,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MACpB,OACI,yBAAKC,UAAY,2CACb,yBAAKC,IAAKH,EAAMI,IAAG,+BAA0BL,EAA1B,cACnB,6BACI,4BAAKC,GACL,2BAAIC,MCOLI,EAZG,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACVC,EAAgBD,EAAOE,KAAI,SAACC,EAAOC,GACrC,OAAO,kBAAC,EAAD,CAAMC,IAAOL,EAAOI,GAAGX,GAAIA,GAAMO,EAAOI,GAAGX,GAAIC,KAAQM,EAAOI,GAAGV,KAAMC,MAASK,EAAOI,GAAGT,WAGrG,OACI,6BACKM,ICIEK,EAZG,SAAC,GAA8B,EAA7BC,YAA8B,IAAlBC,EAAiB,EAAjBA,aAC5B,OACI,yBAAKZ,UAAY,OACb,2BACAA,UAAY,mCACZa,KAAO,SACPC,YAAc,gBACdC,SAAYH,MCaTI,E,kDAnBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,UAAW,GAHD,E,8DAOAC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAW,M,+BAI1B,OAAGG,KAAKJ,MAAMC,SACH,qDAEJG,KAAKL,MAAMO,a,GAhBEC,IAAMC,WC4CnBC,G,wDAvCX,aAAc,IAAD,8BACT,gBAiBJC,eAAiB,SAACC,GACd,EAAKN,SAAS,CAACZ,YAAckB,EAAMC,OAAOC,SAjB1C,EAAKb,MAAQ,CACTd,OAAS,GACTO,YAAc,IAJT,E,gEAQO,IAAD,OACfqB,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKb,SAAS,CAACnB,OAASgC,S,+BAUvB,IAAD,OACEC,EAAiBf,KAAKJ,MAAMd,OAAOkC,QAAO,SAAAC,GAC5C,OAAOA,EAAMzC,KAAK0C,cAAcC,SAAS,EAAKvB,MAAMP,YAAY6B,kBAEpE,OACI,yBAAKxC,UAAY,MACjB,2CACA,kBAAC,EAAD,CAAWY,aAAgBU,KAAKM,iBAChC,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUxB,OAAUiC,U,GAlClBZ,IAAMC,YCAxBgB,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,U","file":"static/js/main.aa2b0a1f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card =  ({id,name,email}) => {\n    return(\n        <div className = ' tc bg-light-green dib br3 pa3 ma2 grow'>\n            <img alt={name} src={`https://robohash.org/${id}?200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card","import React from 'react';\nimport Card from './Card';\n\n const CardList = ({robots}) => {\n    const CardComponent = robots.map((user , i)=>{\n        return <Card key = {robots[i].id} id = {robots[i].id} name = {robots[i].name} email = {robots[i].email}/>\n    })\n    \n    return (\n        <div>\n            {CardComponent}\n        </div>\n    )\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield,searchChange}) =>{\n    return(\n        <div className = 'pa2'>\n            <input \n            className = 'pa3 ba b--green bg-lightest-blue'  \n            type = 'search' \n            placeholder = 'Search Robots' \n            onChange = {searchChange}\n            />\n        </div>\n    )\n}\nexport default SearchBox;","import React from 'react';\n\nclass ErrorBoundary extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError : false \n         }\n    }\n\n    componentDidCatch(error,info){\n        this.setState({hasError : true})\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Something went wrong!</h1>\n        }\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nclass App extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            robots : [],\n            searchfield : ''\n        }\n    }\n    \n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => {\n            return response.json();\n        })\n        .then(users => {\n            this.setState({robots : users});\n        })\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield : event.target.value})\n        \n        \n    }\n\n    render(){\n        const filteredRobots = this.state.robots.filter(robot => {\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        return (\n            <div className = 'tc'>\n            <h1 >ROBOFRIENDS</h1>\n            <SearchBox searchChange = {this.onSearchChange}/>\n            <ErrorBoundary>\n                <CardList robots = {filteredRobots}/>\n            </ErrorBoundary>\n            </div>\n        );\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App'\n\nReactDOM.render(<App />,  document.getElementById('root'));\n\n\n"],"sourceRoot":""}